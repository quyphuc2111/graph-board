(()=>{"use strict";class t{constructor(t,s){this.x=t,this.y=s}getDistance(t,s){return Math.sqrt(Math.pow(t.x-s.x,2)+Math.pow(t.y-s.y,2))}getCurvePos(t,s,e,i,h){const o=this.getMiddle(t,s,e,i),n=this.getAngle(t,s,e,i);return{x:o.x+h*Math.cos(n+Math.PI/2),y:o.y+h*Math.sin(n+Math.PI/2)}}getReverseCurvePos(t,s,e,i,h,o){const n=this.getMiddle(t,s,e,i),a=this.getAngle(t,s,e,i);return(h-n.x)/Math.cos(a+Math.PI/2)+(o-n.y)/Math.sin(a+Math.PI/2)}getMiddle(t,s,e,i){return{x:(t+e)/2,y:(s+i)/2}}getAngle(t,s,e,i){return Math.atan2(s-i,t-e)}ratioLine(t,s,e){e=1-e;const i=this.getDistance(t,s)*e,h=this.getAngle(t.x,t.y,s.x,s.y);return{from:t,to:{x:s.x+i*Math.cos(h),y:s.y+i*Math.sin(h)}}}}class s{constructor(){this.__data__=[]}deQueue(){return this.__data__.shift()}enQueue(t){this.__data__.push(t)}empty(){return!this.__data__.length}}class e{constructor(t){this.__data__=[]}top(){return this.__data__[this.__data__.length-1]}empty(){return 0===this.__data__.length}pop(){return this.__data__.pop()}push(t){this.__data__.push(t)}includes(t){return-1!==this.__data__.indexOf(t)}}class i{constructor(t){this.stack=new e,this.step=1,this.num=[],this.minNum=[],this.linkedParts=[],this.graph=t}tarjan(){return this.graph.nodes.forEach((t=>{this.num[t.label]||this.__tarjan(t.label)})),this.linkedParts}__tarjan(t){if(this.num[t])return this.linkedParts;if(this.num[t]=this.step,this.minNum[t]=this.step,this.step++,this.stack.push(t),this.graph.neighbours(t).forEach((s=>{if(this.stack.includes(s))return this.minNum[t]=Math.min(this.num[s],this.minNum[t]);this.__tarjan(s),this.minNum[t]=Math.min(this.minNum[s],this.minNum[t])})),this.num[t]!==this.minNum[t])return this.linkedParts;const s=[];for(;this.stack.top()!==t;)s.push(this.stack.pop());return s.push(this.stack.pop()),this.linkedParts.push(s),this.linkedParts}}window.Graph=class{constructor({directed:s,showDistance:e,showGrid:i,radius:h,character:o,motion:n}={}){this.alphabet="_ABCDEFGHIJKLMNOPQRSTUVWXYZ",this.board=new class{constructor({width:s,height:e,radius:i,fontSize:h}){this.canvas=document.createElement("canvas"),this.context=this.canvas.getContext("2d"),this.radius=i||20,this.fontSize=h||25,this.clientPosition={x:0,y:0},this.prevPosition={x:0,y:0},this.buttons=0,this.shift=!1,this.alt=!1,this.selector="",this.position=new t(0,0),this.canvas.width=s||300,this.canvas.height=e||400,this.init()}init(){this.canvas.onmousemove=t=>{this.prevPosition={...this.clientPosition},this.clientPosition={x:t.clientX-this.canvas.offsetLeft+window.scrollX,y:t.clientY-this.canvas.offsetTop+window.scrollY},this.buttons=t.buttons,this.shift=t.shiftKey,this.alt=t.altKey},window.onresize=()=>{this.selector&&this.appendTo(this.selector)}}appendTo(t){this.selector=t;const s=document.querySelector(t);s.innerHTML="",s.append(this.canvas),this.canvas.width=s.offsetWidth,this.canvas.height=s.offsetHeight}drawCircle(t,s,e){this.context.lineWidth=5,this.context.beginPath(),this.context.arc(t,s,e,0,2*Math.PI),this.context.stroke(),this.context.fillStyle="#fff",this.context.fill(),this.context.fillStyle="#000",this.context.lineWidth=1}drawNode(t,s,e,i){i&&(this.context.strokeStyle="#dc3545"),this.drawCircle(t,s,this.radius),this.context.font=`${this.fontSize}px Arial`,this.context.textAlign="center",this.context.fillText(e,t,s+this.fontSize/2),this.context.strokeStyle="#000"}drawMotionLine(t,s,e,i,h){this.context.lineWidth=5,this.context.strokeStyle=h||"orange",this.context.beginPath(),this.context.moveTo(t,s),this.context.lineTo(e,i),this.context.stroke(),this.context.lineWidth=1,this.context.strokeStyle="#000"}drawLine(t,s,e,i){this.context.lineWidth=2,this.context.beginPath(),this.context.moveTo(t,s),this.context.lineTo(e,i),this.context.stroke(),this.context.lineWidth=1}drawDirected(t,s,e,i,h){const o=this.getCurvePos(t,s,e,i,h),n=Math.atan2(o.y-i,o.x-e),a={x:e+this.radius*Math.cos(n),y:i+this.radius*Math.sin(n)},r=a.x+this.radius*Math.cos(n)*Math.pow(3,.5)/2,d=a.y+this.radius*Math.sin(n)*Math.pow(3,.5)/2,c={x:r+this.radius/2*Math.cos(n-Math.PI/2),y:d+this.radius/2*Math.sin(n-Math.PI/2)},l={x:r+this.radius/2*Math.cos(n+Math.PI/2),y:d+this.radius/2*Math.sin(n+Math.PI/2)};this.context.lineWidth=5,this.context.beginPath(),this.context.moveTo(a.x,a.y),this.context.lineTo(c.x,c.y),this.context.lineTo(l.x,l.y),this.context.lineTo(a.x,a.y),this.context.fillStyle="#000",this.context.stroke(),this.context.fill(),this.context.lineWidth=1}drawDistance(s,e,i,h,o,n){const a=this.getDistance(new t(s,e),new t(i,h)),r=this.getCurvePos(s,e,i,h,o);this.context.fillStyle=n||"#000",this.context.beginPath(),this.context.fillText(parseInt(a/100),r.x,r.y),this.context.textAlign="center",this.context.fillStyle="#fff"}drawHorizontal(t){this.context.strokeStyle="#fff",this.context.beginPath(),this.context.moveTo(0,t),this.context.lineTo(this.canvas.width,t),this.context.stroke(),this.context.strokeStyle="#000"}drawVertical(t){this.context.strokeStyle="#fff",this.context.beginPath(),this.context.moveTo(t,0),this.context.lineTo(t,this.canvas.height),this.context.stroke(),this.context.strokeStyle="#000"}drawGrid(){for(let t=0;t<=this.canvas.height;t+=2*this.radius)this.drawHorizontal(t);for(let t=0;t<=this.canvas.width;t+=2*this.radius)this.drawVertical(t)}drawCurve(t,s,e,i,h){this.context.moveTo(t,s);const o=this.getCurvePos(t,s,e,i,h);this.context.quadraticCurveTo(o.x,o.y,e,i),this.context.stroke()}getMiddle(t,s,e,i){return this.position.getMiddle(t,s,e,i)}getCurvePos(t,s,e,i,h){return this.position.getCurvePos(t,s,e,i,h)}getDistance(t,s){return this.position.getDistance(t,s)}clear(){this.context.fillStyle="#f4f8ff",this.context.fillRect(0,0,this.canvas.width,this.canvas.height),this.context.fill(),this.context.fillStyle="#000"}}({radius:h}),this.nodes=[],this.edges=[],this.target=null,this.selectedEdgeId=null,this.directed=s,this.showDistance=e,this.showGrid=i,this.character=o,this.motionSteps={step:0,steps:[]},this.onchange=Function,this.motion=n,this.linkedParts=[],this.init()}init(){this.board.canvas.ondblclick=()=>{this.target||this.addNode(this.nodes.length+1,this.board.clientPosition.x,this.board.clientPosition.y)},this.board.canvas.addEventListener("mousemove",(()=>{const{x:t,y:s}=this.board.clientPosition;document.body.style.cursor="unset",this.edges.map(((e,i)=>{if(1===this.board.buttons)return;const h=this.nodes[e.from-1],o=this.nodes[e.to-1];if(!h||!o)return;const n=this.board.getCurvePos(h.x,h.y,o.x,o.y,e.curve/2);this.board.getDistance(n,{x:t,y:s})<this.board.radius&&(this.selectedEdgeId=i),this.target&&(this.selectedEdgeId=null)})),this.nodes.forEach((e=>{this.equalPoint(t,e.x)&&this.equalPoint(s,e.y)&&(this.target=this.target||e.label)})),this.target&&(this.board.buttons&&this.board.shift?document.body.style.cursor="move":document.body.style.cursor="pointer",this.board.shift||1===this.board.buttons||this.equalPoint(t,this.target.x)&&this.equalPoint(s,this.target,s)||(this.target=null))})),this.board.canvas.onclick=t=>{t.altKey&&(this.removeEdge(this.edges[this.selectedEdgeId]||{}),this.target&&this.removeNode(this.nodes.length))},this.render()}render(){this.update(),this.draw(),setTimeout((()=>{this.render()}),1e3/60)}update(){this.checkAddEdge(),this.updateCurve(),this.updateNodes(),this.updateMotion()}draw(){this.board.clear(),this.showGrid&&this.board.drawGrid(),this.drawEdges(),this.drawLine(),this.drawNodes(),this.drawMotions(),this.drawLinked()}updateCurve(){1===this.board.buttons&&null!==this.selectedEdgeId&&(this.target||(this.onchange(),this.edges[this.selectedEdgeId].curve=this.board.position.getReverseCurvePos(this.nodes[this.edges[this.selectedEdgeId].from-1].x,this.nodes[this.edges[this.selectedEdgeId].from-1].y,this.nodes[this.edges[this.selectedEdgeId].to-1].x,this.nodes[this.edges[this.selectedEdgeId].to-1].y,this.board.clientPosition.x,this.board.clientPosition.y)))}updateNodes(){this.nodes=this.nodes.map((t=>this.updateNode(t)))}updateNode(t){return this.board.buttons&&!this.board.shift&&this.target&&this.target===t.label?(this.onchange(),this.toClientPosition(t)):this.motion?this.magicFunction(t):t}updateMotion(){if(!this.motionSteps.steps?.length)return;let t=!1;this.motionSteps.steps=this.motionSteps.steps.map(((s,e)=>e>this.motionSteps.step?{...s,step:0}:s.step>=1||t?s:(t=!0,{...s,step:s.step+=.01})))}drawMotions(){this.motionSteps.steps.forEach((t=>this.drawMotion(t)))}drawMotion(t,s){this.nodes[t.from-1]&&this.nodes[t.to-1]&&(t=this.board.position.ratioLine(this.nodes[t.from-1],this.nodes[t.to-1],t.step),this.board.drawMotionLine(t.from.x,t.from.y,t.to.x,t.to.y,s))}addNode(t,s,e){const i={x:s||Math.floor(Math.random()*this.board.canvas.width),y:e||Math.floor(Math.random()*this.board.canvas.height),label:t,move:10};this.nodes.push(i),this.onchange()}addEdge(t,s){const e={from:t,to:s,curve:0};this.edges.forEach((t=>{t.from===e.from&&t.to===e.to&&(e.curve=50+50*Math.random()),t.from===e.to&&t.to===e.from&&(e.curve=50+50*Math.random())})),this.edges.push(e),this.target=null,this.onchange()}removeNode(t){this.nodes=this.nodes.filter((s=>s.label!==t)),this.onchange(),this.linkedParts=[]}removeEdge(t){const{from:s,to:e}=t;this.edges=this.edges.filter((t=>t.from!==s||t.to!==e)),this.onchange(),this.linkedParts=[]}drawNodes(){this.nodes.forEach((t=>{this.board.drawNode(t.x,t.y,this.character?this.alphabet[t.label]:t.label,this.target===t.label)}))}magicFunction(t){return t.move>=0?{...t,x:t.x+.1,y:t.y+.1,move:t.move-.1}:t.move>=-10?{...t,x:t.x-.1,y:t.y-.1,move:t.move-.1}:{...t,move:10}}toClientPosition(t){return{...t,x:this.board.clientPosition.x,y:this.board.clientPosition.y}}drawEdges(){this.edges.forEach((t=>this.drawEdge(t)))}drawLine(){if(!this.board.shift||1!==this.board.buttons||!this.target)return;const{x:t,y:s}=this.board.clientPosition;this.board.drawLine(this.nodes[this.target-1].x,this.nodes[this.target-1].y,t,s)}checkAddEdge(){if(!this.target)return;if(!this.board.shift)return;const{x:t,y:s}=this.board.clientPosition;this.nodes.forEach((e=>{this.target&&e.label!==this.target&&this.equalPoint(t,e.x)&&this.equalPoint(s,e.y)&&(this.addEdge(this.target,e.label),this.target=null)}))}drawEdge(t){let s=null,e=null;if(this.nodes.forEach((i=>{i.label==t.from&&(s=i),i.label==t.to&&(e=i)})),!s||!e)return this.removeEdge(t);this.board.drawCurve(s.x,s.y,e.x,e.y,t.curve),this.directed&&this.board.drawDirected(s.x,s.y,e.x,e.y,t.curve),this.showDistance&&this.board.drawDistance(s.x,s.y,e.x,e.y,t.curve)}exportMatrix(){const t=[],s=[];for(let t=0;t<=this.nodes.length;t++)s.push(0);for(let e=0;e<=this.nodes.length;e++)t.push([...s]);return this.edges.forEach((s=>{t[s.from][s.to]++,this.directed||t[s.to][s.from]++})),t}equalPoint(t,s){return Math.abs(t-s)<=this.board.radius}neighbours(t){return this.exportMatrix()[t].map(((t,s)=>t?s:t)).filter((t=>t))}deepFirstSearch(t){const s=[],i=new e;let h=[];for(i.push({to:t});!i.empty();){const t=i.top();(i.pop(),s[t.to])||(s[t.to]=!0,h.push(t),this.neighbours(t.to).forEach((s=>{i.push({from:t.to,to:s})})))}return h={step:0,steps:h.filter((t=>t.from)).map((t=>({...t,step:0})))},this.motionStart(h),h}breadthFirstSearch(t){const e=[],i=new s;let h=[];for(i.enQueue({to:t});!i.empty();){const t=i.deQueue();e[t.to]||(e[t.to]=!0,h.push(t),this.neighbours(t.to).forEach((s=>{i.enQueue({from:t.to,to:s})})))}return h={step:0,steps:h.filter((t=>t.from)).map((t=>({...t,step:0})))},this.motionStart(h),h}drawLinked(){this.linkedParts.length&&this.linkedParts.forEach((t=>{if(1!==t.length)for(let s=0;s<t.length;s++)for(let e=0;e<t.length;e++)s!==e&&this.neighbours(t[s]).includes(t[e])&&this.drawMotion({from:t[s],to:t[e],step:1},"red")}))}tarjanStop(){this.linkedParts=[],this.onchange()}tarjanStart(){this.linkedParts=this.tarjan(),this.onchange()}tarjan(){return new i(this).tarjan()}appendTo(t){this.board.appendTo(t)}motionStart(t){this.motionSteps=t,this.onchange()}motionStop(){this.motionSteps.step=0,this.motionSteps.steps=[],this.onchange()}nextStep(){return this.motionSteps.step===this.motionSteps.step-1||(this.motionSteps.step++,this.onchange()),this.motionSteps.step}prevStep(){return 0===this.motionSteps.step||(this.motionSteps.step--,this.onchange()),this.motionSteps.step}getNodes(){return this.nodes.map((t=>({...this.edges,label:this.character?this.alphabet[t.label]:t.label})))}getEdges(){return this.edges.map((t=>({...t,from:this.character?this.alphabet[t.from]:t.from,to:this.character?this.alphabet[t.to]:t.label})))}setDirected(t){this.directed=t,this.onchange()}setShowGrid(t){this.showGrid=t,this.onchange()}setShowDistance(t){this.showDistance=t,this.onchange()}setRadius(t){this.board.radius=t,this.onchange()}setMotion(t){this.motion=t,this.onchange()}setCharacter(t){this.character=t,this.onchange()}}})();