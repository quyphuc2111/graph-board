(()=>{"use strict";class t{constructor(t,e){this.x=t,this.y=e}getDistance(t,e){return Math.sqrt(Math.pow(t.x-e.x,2)+Math.pow(t.y-e.y,2))}getCurvePos(t,e,i,s,o){const h=this.getMiddle(t,e,i,s),n=this.getAngle(t,e,i,s);return{x:h.x+o*Math.cos(n+Math.PI/2),y:h.y+o*Math.sin(n+Math.PI/2)}}getMiddle(t,e,i,s){return{x:(t+i)/2,y:(e+s)/2}}getAngle(t,e,i,s){return Math.atan2(e-s,t-i)}ratioLine(t,e,i){i=1-i;const s=this.getDistance(t,e)*i,o=this.getAngle(t.x,t.y,e.x,e.y);return{from:t,to:{x:e.x+s*Math.cos(o),y:e.y+s*Math.sin(o)}}}}class e{constructor(){this.__data__=[]}deQueue(){return this.__data__.shift()}enQueue(t){this.__data__.push(t)}empty(){return!this.__data__.length}}class i{constructor(t){this.__data__=[]}top(){return this.__data__[this.__data__.length-1]}empty(){return 0===this.__data__.length}pop(){this.__data__.pop()}push(t){this.__data__.push(t)}}window.Graph=class{constructor({directed:e,showDistance:i,showGrid:s,radius:o,character:h}={}){this.alphabet="_ABCDEFGHIJKLMNOPQRSTUVWXYZ",this.board=new class{constructor({width:e,height:i,radius:s,fontSize:o}){this.canvas=document.createElement("canvas"),this.context=this.canvas.getContext("2d"),this.radius=s||20,this.fontSize=o||25,this.clientPosition={x:0,y:0},this.prevPosition={x:0,y:0},this.buttons=0,this.shift=!1,this.selector="",this.position=new t(0,0),this.canvas.width=e||300,this.canvas.height=i||400,this.init()}init(){this.canvas.onmousemove=t=>{this.prevPosition={...this.clientPosition},this.clientPosition={x:t.clientX-this.canvas.offsetLeft+window.scrollX,y:t.clientY-this.canvas.offsetTop+window.scrollY},this.buttons=t.buttons,this.shift=t.shiftKey},window.onresize=()=>{this.selector&&this.appendTo(this.selector)}}appendTo(t){this.selector=t;const e=document.querySelector(t);e.innerHTML="",e.append(this.canvas),this.canvas.width=e.offsetWidth,this.canvas.height=e.offsetHeight}drawCircle(t,e,i){this.context.lineWidth=5,this.context.beginPath(),this.context.arc(t,e,i,0,2*Math.PI),this.context.stroke(),this.context.fillStyle="#fff",this.context.fill(),this.context.fillStyle="#000",this.context.lineWidth=1}drawNode(t,e,i,s){s&&(this.context.strokeStyle="#dc3545"),this.drawCircle(t,e,this.radius),this.context.font=`${this.fontSize}px Arial`,this.context.textAlign="center",this.context.fillText(i,t,e+this.fontSize/2),this.context.strokeStyle="#000"}drawMotionLine(t,e,i,s){this.context.lineWidth=5,this.context.strokeStyle="orange",this.context.beginPath(),this.context.moveTo(t,e),this.context.lineTo(i,s),this.context.stroke(),this.context.lineWidth=1,this.context.strokeStyle="#000"}drawLine(t,e,i,s){this.context.lineWidth=2,this.context.beginPath(),this.context.moveTo(t,e),this.context.lineTo(i,s),this.context.stroke(),this.context.lineWidth=1}drawDirected(t,e,i,s,o){const h=this.getCurvePos(t,e,i,s,o),n=Math.atan2(h.y-s,h.x-i),r={x:i+this.radius*Math.cos(n),y:s+this.radius*Math.sin(n)},a=r.x+this.radius*Math.cos(n)*Math.pow(3,.5)/2,d=r.y+this.radius*Math.sin(n)*Math.pow(3,.5)/2,c={x:a+this.radius/2*Math.cos(n-Math.PI/2),y:d+this.radius/2*Math.sin(n-Math.PI/2)},l={x:a+this.radius/2*Math.cos(n+Math.PI/2),y:d+this.radius/2*Math.sin(n+Math.PI/2)};this.context.lineWidth=5,this.context.beginPath(),this.context.moveTo(r.x,r.y),this.context.lineTo(c.x,c.y),this.context.lineTo(l.x,l.y),this.context.lineTo(r.x,r.y),this.context.fillStyle="#000",this.context.stroke(),this.context.fill(),this.context.lineWidth=1}drawDistance(e,i,s,o,h,n){const r=this.getDistance(new t(e,i),new t(s,o)),a=this.getCurvePos(e,i,s,o,h);this.context.fillStyle=n||"#000",this.context.beginPath(),this.context.fillText(parseInt(r/100),a.x,a.y),this.context.textAlign="center",this.context.fillStyle="#fff"}drawHorizontal(t){this.context.strokeStyle="#fff",this.context.beginPath(),this.context.moveTo(0,t),this.context.lineTo(this.canvas.width,t),this.context.stroke(),this.context.strokeStyle="#000"}drawVertical(t){this.context.strokeStyle="#fff",this.context.beginPath(),this.context.moveTo(t,0),this.context.lineTo(t,this.canvas.height),this.context.stroke(),this.context.strokeStyle="#000"}drawGrid(){for(let t=0;t<=this.canvas.height;t+=2*this.radius)this.drawHorizontal(t);for(let t=0;t<=this.canvas.width;t+=2*this.radius)this.drawVertical(t)}drawCurve(t,e,i,s,o){this.context.moveTo(t,e);const h=this.getCurvePos(t,e,i,s,o);this.context.quadraticCurveTo(h.x,h.y,i,s),this.context.stroke()}getMiddle(t,e,i,s){return this.position.getMiddle(t,e,i,s)}getCurvePos(t,e,i,s,o){return this.position.getCurvePos(t,e,i,s,o)}getDistance(t,e){return this.position.getDistance(t,e)}clear(){this.context.fillStyle="#f4f8ff",this.context.fillRect(0,0,this.canvas.width,this.canvas.height),this.context.fill(),this.context.fillStyle="#000"}}({radius:o}),this.nodes=[],this.edges=[],this.functions=[],this.target=null,this.selectedEdgeId=null,this.directed=e,this.showDistance=i,this.showGrid=s,this.character=h,this.motionSteps=[],this.init()}init(){this.board.canvas.ondblclick=()=>{this.target||this.addNode(this.nodes.length+1,this.board.clientPosition.x,this.board.clientPosition.y)},this.board.canvas.addEventListener("mousemove",(()=>{const{x:t,y:e}=this.board.clientPosition;document.body.style.cursor="unset",this.edges.map(((i,s)=>{if(1===this.board.buttons)return;const o=this.nodes[i.from-1],h=this.nodes[i.to-1];if(!o||!h)return;const n=this.board.getCurvePos(o.x,o.y,h.x,h.y,i.curve);this.board.getDistance(n,{x:t,y:e})<this.board.radius&&(this.selectedEdgeId=s),this.target&&(this.selectedEdgeId=null)})),this.nodes.forEach((i=>{this.equalPoint(t,i.x)&&this.equalPoint(e,i.y)&&(this.target=this.target||i)})),this.target&&(this.board.buttons&&this.board.shift?document.body.style.cursor="move":document.body.style.cursor="pointer",this.board.shift||1===this.board.buttons||this.equalPoint(t,this.target.x)&&this.equalPoint(e,this.target,e)||(this.target=null))})),this.render()}render(){this.update(),this.draw(),setTimeout((()=>{this.render()}),1e3/60)}update(){this.checkAddEdge(),this.updateCurve(),this.updateNodes(),this.updateMotion()}draw(){this.board.clear(),this.showGrid&&this.board.drawGrid(),this.drawEdges(),this.drawLine(),this.drawNodes(),this.drawMotions()}updateCurve(){1===this.board.buttons&&null!==this.selectedEdgeId&&(this.target||(this.edges[this.selectedEdgeId].curve+=this.board.clientPosition.x-this.board.prevPosition.x))}updateNodes(){this.nodes=this.nodes.map((t=>this.board.buttons&&!this.board.shift&&this.target&&this.target.label===t.label?(this.target=this.toClientPosition(t),this.toClientPosition(t)):this.magicFunction(t)))}updateMotion(){if(!this.motionSteps?.length)return;let t=!1;this.motionSteps=this.motionSteps.map((e=>e.step>=1||t?e:(t=!0,{...e,step:e.step+=.01})))}drawMotions(){this.motionSteps.forEach((t=>this.drawMotion(t)))}drawMotion(t){t=this.board.position.ratioLine(this.nodes[t.from-1],this.nodes[t.to-1],t.step),this.board.drawMotionLine(t.from.x,t.from.y,t.to.x,t.to.y)}addNode(t,e,i){const s={x:e||Math.floor(Math.random()*this.board.canvas.width),y:i||Math.floor(Math.random()*this.board.canvas.height),label:t,move:10};this.nodes.push(s)}addEdge(t,e){const i={from:t,to:e,curve:100*Math.random()};this.edges.push(i),this.target=null}removeNode(t){this.nodes=this.nodes.filter((e=>e.label!==t))}removeEdge(t){const{from:e,to:i}=t;this.edges=this.edges.filter((t=>t.from!==e||t.to!==i))}drawNodes(){this.nodes.forEach((t=>{this.board.drawNode(t.x,t.y,this.character?this.alphabet[t.label]:t.label,this.target?.label===t.label)}))}magicFunction(t){return t.move>=0?{...t,x:t.x+.1,y:t.y+.1,move:t.move-.1}:t.move>=-10?{...t,x:t.x-.1,y:t.y-.1,move:t.move-.1}:{...t,move:10}}toClientPosition(t){return{...t,x:this.board.clientPosition.x,y:this.board.clientPosition.y}}drawEdges(){this.edges.forEach((t=>this.drawEdge(t)))}drawLine(){if(!this.board.shift||1!==this.board.buttons||!this.target)return;const{x:t,y:e}=this.board.clientPosition;this.board.drawLine(this.target.x,this.target.y,t,e)}checkAddEdge(){if(!this.target)return;if(!this.board.shift)return;const{x:t,y:e}=this.board.clientPosition;this.nodes.forEach((i=>{this.target&&i.label!==this.target.label&&this.equalPoint(t,i.x)&&this.equalPoint(e,i.y)&&(this.addEdge(this.target.label,i.label),this.target=null)}))}drawEdge(t){let e=null,i=null;if(this.nodes.forEach((s=>{s.label==t.from&&(e=s),s.label==t.to&&(i=s)})),!e||!i)return this.removeEdge(t);this.board.drawCurve(e.x,e.y,i.x,i.y,t.curve),this.directed&&this.board.drawDirected(e.x,e.y,i.x,i.y,t.curve),this.showDistance&&this.board.drawDistance(e.x,e.y,i.x,i.y,t.curve)}exportMatrix(){const t=[],e=[];for(let t=0;t<=this.nodes.length;t++)e.push(0);for(let i=0;i<=this.nodes.length;i++)t.push([...e]);return this.edges.forEach((e=>{t[e.from][e.to]++,this.directed||t[e.to][e.from]++})),t}equalPoint(t,e){return Math.abs(t-e)<=this.board.radius}neighbours(t){return this.exportMatrix()[t].map(((t,e)=>t?e:t)).filter((t=>t))}deepFirstSearch(t){const e=[],s=new i;let o=[];for(s.push({to:t});!s.empty();){const t=s.top();(s.pop(),e[t.to])||(e[t.to]=!0,o.push(t),this.neighbours(t.to).reverse().forEach((e=>{s.push({from:t.to,to:e})})))}return o=o.filter((t=>t.from)).map((t=>({...t,step:0}))),this.motionStart(o),o}breadthFirstSearch(t){const i=[],s=new e;let o=[];for(s.enQueue({to:t});!s.empty();){const t=s.deQueue();i[t.to]||(i[t.to]=!0,o.push(t),this.neighbours(t.to).forEach((e=>{s.enQueue({from:t.to,to:e})})))}return o=o.filter((t=>t.from)).map((t=>({...t,step:0}))),this.motionStart(o),o}appendTo(t){this.board.appendTo(t)}setDirected(t){this.directed=t}setShowGrid(t){this.showGrid=t}setShowDistance(t){this.showDistance=t}setRadius(t){this.board.radius=t}getNodes(){return this.nodes.map((t=>({...this.edges,label:this.character?this.alphabet[t.label]:t.label})))}getEdges(){return this.edges.map((t=>({...t,from:this.character?this.alphabet[t.from]:t.from,to:this.character?this.alphabet[t.to]:t.label})))}motionStart(t){this.motionSteps=t}motionStop(){this.motionSteps=[]}}})();